[project]
name = "sample_registry"  # Required
dynamic = ["version"]
description = "PennCHOP Microbiome Program Sample Registry"  # Optional
readme = "README.md" # Optional
requires-python = ">=3.10"
authors = [
  {name = "Kyle Bittinger", email = "kylebittinger@gmail.com"},
  {name = "Charlie Bushman", email = "ctbushman@gmail.com" } # Optional
]

maintainers = [
  {name = "Charlie Bushman", email = "ctbushman@gmail.com" } # Optional
]

classifiers = [
  "Development Status :: 5 - Production/Stable",

  "License :: OSI Approved :: MIT License",

  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
]

dependencies = [
    "sqlalchemy~=2.0",
    "seqbackup @ git+https://github.com/PennChopMicrobiomeProgram/seqBackup.git@master",
]

[project.optional-dependencies] # Optional
dev = [
  "black~=25.1",
  "pytest~=8.4",
  "pytest-cov~=7.0",
]
web = [
  "flask~=3.1",
  "flask-sqlalchemy~=3.1",
]

[project.urls]  # Optional
"Homepage" = "https://sampleregistry.tkg.research.chop.edu"
"Bug Reports" = "https://github.com/PennChopMicrobiomeProgram/SampleRegistry/issues"
"Source" = "https://github.com/PennChopMicrobiomeProgram/SampleRegistry/"

[project.scripts]  # Optional
register_run = "sample_registry.register:register_run"
modify_run = "sample_registry.register:modify_run"
register_run_file = "sample_registry.register:register_illumina_file"
unregister_samples = "sample_registry.register:unregister_samples"
register_samples = "sample_registry.register:register_samples"
modify_sample = "sample_registry.register:modify_sample"
register_annotations = "sample_registry.register:register_annotations"
modify_annotation = "sample_registry.register:modify_annotation"
register_host_species = "sample_registry.register:register_host_species"
register_sample_types = "sample_registry.register:register_sample_types"
export_samples = "sample_registry.export:export_samples"
create_test_db = "sample_registry.db:create_test_db"
sample_registry_version = "sample_registry:sample_registry_version"

[tool.setuptools]
packages = ["sample_registry"]

[tool.setuptools.package-data]
"sample_registry" = [
    "templates/*.html",
    "static/*",
    "static/img/*",
]

[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "sample_registry.__version__"}
